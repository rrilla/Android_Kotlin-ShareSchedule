package com.example.share_schedule.data.remote.model.event

import com.example.share_schedule.data.db.entity.EventEntity

data class Event(
    val attendees: List<Attendee>?,
    val colorId: String?,
    val conferenceData: ConferenceData?,
    val created: String?,
    val creator: Creator?,
    val description: String?,
    val end: End?,
    val etag: String?,
    val eventType: String?,
    val guestsCanInviteOthers: Boolean?,
    val guestsCanSeeOtherGuests: Boolean?,
    val hangoutLink: String?,
    val htmlLink: String?,
    val iCalUID: String?,
    val id: String,
    val kind: String?,
    val location: String?,
    val organizer: Organizer?,
    val recurrence: List<String>?,
    val reminders: Reminders?,
    val sequence: Int?,
    val start: Start?,
    val status: String?,
    val summary: String?,
    val transparency: String?,
    val updated: String?,
    val visibility: String?,
    var calendarId: String,
) {
    fun toEntity(): EventEntity =
        EventEntity(
            attendees = attendees,
            colorId = colorId,
            conferenceData = conferenceData,
            created = created,
            creator = creator,
            description = description,
            end = end,
            etag = etag,
            eventType = eventType,
            guestsCanInviteOthers = guestsCanInviteOthers,
            guestsCanSeeOtherGuests = guestsCanSeeOtherGuests,
            hangoutLink = hangoutLink,
            htmlLink = htmlLink,
            iCalUID = iCalUID,
            id = id,
            kind = kind,
            location = location,
            organizer = organizer,
            recurrence = recurrence,
            reminders = reminders,
            sequence = sequence,
            start = start,
            status = status,
            summary = summary,
            transparency = transparency,
            updated = updated,
            visibility = visibility,
            calendarId = calendarId
        )
}